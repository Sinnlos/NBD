[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Lenovo\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Lenovo\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (AdoptOpenJDK Java 13.0.2)
[debug]       Load.loadUnit: plugins took 117.3319ms
[debug]       Load.loadUnit: defsScala took 0.3523ms
[debug] [Loading] Scanning directory C:\Users\Lenovo\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Lenovo\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 24.627 ms
[debug]           Load.resolveProject(global-plugins) took 60.6339ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Lenovo\.sbt\1.0\plugins, plugins: List(<none>))) took 119.0415ms
[debug] [Loading] Done in C:\Users\Lenovo\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 147.9834ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3413ms
[debug]     Load.loadUnit(file:/C:/Users/Lenovo/.sbt/1.0/plugins/, ...) took 276.1227ms
[debug]   Load.apply: load took 477.3977ms
[debug]   Load.apply: resolveProjects took 6.8942ms
[debug]   Load.apply: finalTransforms took 73.7273ms
[debug]   Load.apply: config.delegates took 7.0967ms
[debug]   Load.apply: Def.make(settings)... took 787.0565ms
[debug]   Load.apply: structureIndex took 119.8803ms
[debug]   Load.apply: mkStreams took 1.6444ms
[info] loading global plugins from C:\Users\Lenovo\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 14490.5322ms
[debug]           Load.loadUnit: plugins took 24.1156ms
[debug]           Load.loadUnit: defsScala took 0.0041ms
[debug] [Loading] Scanning directory C:\Users\Lenovo\IdeaProjects\scala_introduction\project
[debug]             Load.loadUnit: mkEval took 6.7716ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Lenovo\IdeaProjects\scala_introduction\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.0422 ms
[info] loading settings for project scala_introduction-build from idea.sbt ...
[debug]               Load.resolveProject(scala_introduction-build) took 4.7657ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala_introduction-build, base: C:\Users\Lenovo\IdeaProjects\scala_introduction\project, plugins: List(<none>))) took 7.3989ms
[debug] [Loading] Done in C:\Users\Lenovo\IdeaProjects\scala_introduction\project, returning: (scala_introduction-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2394.3375ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.3067ms
[debug]         Load.loadUnit(file:/C:/Users/Lenovo/IdeaProjects/scala_introduction/project/, ...) took 2424.6546ms
[debug]       Load.apply: load took 2426.2125ms
[debug]       Load.apply: resolveProjects took 0.1135ms
[debug]       Load.apply: finalTransforms took 12.6469ms
[debug]       Load.apply: config.delegates took 0.3018ms
[debug]       Load.apply: Def.make(settings)... took 95.3862ms
[debug]       Load.apply: structureIndex took 25.4313ms
[debug]       Load.apply: mkStreams took 0.0032ms
[info] loading project definition from C:\Users\Lenovo\IdeaProjects\scala_introduction\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 3545.6966ms
[debug]     Load.loadUnit: defsScala took 0.0032ms
[debug] [Loading] Scanning directory C:\Users\Lenovo\IdeaProjects\scala_introduction
[debug]       Load.loadUnit: mkEval took 0.2575ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Lenovo\IdeaProjects\scala_introduction, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.2899 ms
[info] loading settings for project scala_introduction from build.sbt ...
[debug]         Load.resolveProject(scala_introduction) took 41.4554ms
[debug]       Load.loadTransitive: finalizeProject(Project(id scala_introduction, base: C:\Users\Lenovo\IdeaProjects\scala_introduction, plugins: List(<none>))) took 45.2295ms
[debug] [Loading] Done in C:\Users\Lenovo\IdeaProjects\scala_introduction, returning: (scala_introduction)
[debug]     Load.loadUnit: loadedProjectsRaw took 973.2044ms
[debug]     Load.loadUnit: cleanEvalClasses took 18.1622ms
[debug]   Load.loadUnit(file:/C:/Users/Lenovo/IdeaProjects/scala_introduction/, ...) took 4537.8666ms
[debug] Load.apply: load took 4540.0108ms
[debug] Load.apply: resolveProjects took 0.1015ms
[debug] Load.apply: finalTransforms took 28.5106ms
[debug] Load.apply: config.delegates took 0.4294ms
[debug] Load.apply: Def.make(settings)... took 76.0337ms
[debug] Load.apply: structureIndex took 22.8244ms
[debug] Load.apply: mkStreams took 0.0027ms
[info] set current project to scala_introduction (in build file:/C:/Users/Lenovo/IdeaProjects/scala_introduction/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 55709 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 55709, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to scala_introduction (in build file:/C:/Users/Lenovo/IdeaProjects/scala_introduction/)
[debug] > Exec(idea-shell, None, None)
